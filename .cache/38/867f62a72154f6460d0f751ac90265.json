{"id":"objects.ts","dependencies":[{"name":"C:\\Users\\Admin\\Documents\\github\\fp\\tsconfig.json","includedInParent":true,"mtime":1564928239237},{"name":"C:\\Users\\Admin\\Documents\\github\\fp\\package.json","includedInParent":true,"mtime":1564960653532}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * Merges Multiple Objects into one final Object with applied maping method\r\n * e.g: merge_with(add, {\"a\": 1, \"b\": 2}, {\"b\": 2}) => {\"a\": 1, \"b\": 4}\r\n * e.g: merge_with(sub, {\"a\": 1, \"b\": 2}, {\"b\": 2}) => {\"a\": 1, \"b\": 0}\r\n * Similar to zipWith() for arrays\r\n * @export\r\n * @param {Function} fn\r\n * @returns\r\n */\n\nfunction merge_with(fn) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args.reduce(function (p, c) {\n      for (var key in c) {\n        p[key] = fn(p[key] || 0, c[key]);\n      }\n\n      return p;\n    });\n  };\n}\n\nexports.merge_with = merge_with;"},"sourceMaps":{"js":{"mappings":[{"source":"objects.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":6,"column":0}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":16,"column":0}},{"source":"objects.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":16,"column":9}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":16,"column":19}},{"source":"objects.ts","name":null,"original":{"line":12,"column":27},"generated":{"line":16,"column":20}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":16,"column":22}},{"source":"objects.ts","name":null,"original":{"line":12,"column":39},"generated":{"line":16,"column":24}},{"source":"objects.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":17,"column":0}},{"source":"objects.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":17,"column":9}},{"source":"objects.ts","name":null,"original":{"line":13,"column":23},"generated":{"line":17,"column":21}},{"source":"objects.ts","name":null,"original":{"line":13,"column":23},"generated":{"line":18,"column":0}},{"source":"objects.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":18,"column":38}},{"source":"objects.ts","name":null,"original":{"line":13,"column":23},"generated":{"line":18,"column":42}},{"source":"objects.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":19,"column":0}},{"source":"objects.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":19,"column":6}},{"source":"objects.ts","name":null,"original":{"line":13,"column":23},"generated":{"line":19,"column":10}},{"source":"objects.ts","name":null,"original":{"line":13,"column":23},"generated":{"line":20,"column":0}},{"source":"objects.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":22,"column":0}},{"source":"objects.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":22,"column":11}},{"source":"objects.ts","name":null,"original":{"line":14,"column":19},"generated":{"line":22,"column":15}},{"source":"objects.ts","name":null,"original":{"line":14,"column":20},"generated":{"line":22,"column":16}},{"source":"objects.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":22,"column":22}},{"source":"objects.ts","name":null,"original":{"line":14,"column":27},"generated":{"line":22,"column":23}},{"source":"objects.ts","name":null,"original":{"line":14,"column":28},"generated":{"line":22,"column":33}},{"source":"objects.ts","name":null,"original":{"line":14,"column":27},"generated":{"line":22,"column":34}},{"source":"objects.ts","name":null,"original":{"line":14,"column":31},"generated":{"line":22,"column":36}},{"source":"objects.ts","name":null,"original":{"line":14,"column":27},"generated":{"line":22,"column":37}},{"source":"objects.ts","name":null,"original":{"line":14,"column":36},"generated":{"line":22,"column":39}},{"source":"objects.ts","name":null,"original":{"line":15,"column":12},"generated":{"line":23,"column":0}},{"source":"objects.ts","name":null,"original":{"line":15,"column":17},"generated":{"line":23,"column":11}},{"source":"objects.ts","name":null,"original":{"line":15,"column":21},"generated":{"line":23,"column":15}},{"source":"objects.ts","name":null,"original":{"line":15,"column":12},"generated":{"line":23,"column":18}},{"source":"objects.ts","name":null,"original":{"line":15,"column":28},"generated":{"line":23,"column":22}},{"source":"objects.ts","name":null,"original":{"line":15,"column":12},"generated":{"line":23,"column":23}},{"source":"objects.ts","name":null,"original":{"line":15,"column":31},"generated":{"line":23,"column":25}},{"source":"objects.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":24,"column":0}},{"source":"objects.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":24,"column":8}},{"source":"objects.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":24,"column":9}},{"source":"objects.ts","name":null,"original":{"line":16,"column":18},"generated":{"line":24,"column":10}},{"source":"objects.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":24,"column":13}},{"source":"objects.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":24,"column":14}},{"source":"objects.ts","name":null,"original":{"line":16,"column":25},"generated":{"line":24,"column":17}},{"source":"objects.ts","name":null,"original":{"line":16,"column":27},"generated":{"line":24,"column":19}},{"source":"objects.ts","name":null,"original":{"line":16,"column":28},"generated":{"line":24,"column":20}},{"source":"objects.ts","name":null,"original":{"line":16,"column":29},"generated":{"line":24,"column":21}},{"source":"objects.ts","name":null,"original":{"line":16,"column":30},"generated":{"line":24,"column":22}},{"source":"objects.ts","name":null,"original":{"line":16,"column":29},"generated":{"line":24,"column":25}},{"source":"objects.ts","name":null,"original":{"line":16,"column":28},"generated":{"line":24,"column":26}},{"source":"objects.ts","name":null,"original":{"line":16,"column":38},"generated":{"line":24,"column":30}},{"source":"objects.ts","name":null,"original":{"line":16,"column":27},"generated":{"line":24,"column":31}},{"source":"objects.ts","name":null,"original":{"line":16,"column":41},"generated":{"line":24,"column":33}},{"source":"objects.ts","name":null,"original":{"line":16,"column":42},"generated":{"line":24,"column":34}},{"source":"objects.ts","name":null,"original":{"line":16,"column":43},"generated":{"line":24,"column":35}},{"source":"objects.ts","name":null,"original":{"line":16,"column":42},"generated":{"line":24,"column":38}},{"source":"objects.ts","name":null,"original":{"line":16,"column":27},"generated":{"line":24,"column":39}},{"source":"objects.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":24,"column":40}},{"source":"objects.ts","name":null,"original":{"line":17,"column":13},"generated":{"line":25,"column":0}},{"source":"objects.ts","name":null,"original":{"line":18,"column":12},"generated":{"line":27,"column":0}},{"source":"objects.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":27,"column":13}},{"source":"objects.ts","name":null,"original":{"line":18,"column":12},"generated":{"line":27,"column":14}},{"source":"objects.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":28,"column":0}},{"source":"objects.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":28,"column":5}},{"source":"objects.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":28,"column":6}},{"source":"objects.ts","name":null,"original":{"line":20,"column":5},"generated":{"line":29,"column":0}},{"source":"objects.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":29,"column":3}},{"source":"objects.ts","name":null,"original":{"line":21,"column":1},"generated":{"line":30,"column":0}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":0}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":7}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":8}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":18}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":21}},{"source":"objects.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":31}}],"sources":{"objects.ts":"\r\n\r\n/**\r\n * Merges Multiple Objects into one final Object with applied maping method\r\n * e.g: merge_with(add, {\"a\": 1, \"b\": 2}, {\"b\": 2}) => {\"a\": 1, \"b\": 4}\r\n * e.g: merge_with(sub, {\"a\": 1, \"b\": 2}, {\"b\": 2}) => {\"a\": 1, \"b\": 0}\r\n * Similar to zipWith() for arrays\r\n * @export\r\n * @param {Function} fn\r\n * @returns\r\n */\r\nexport function merge_with(fn: Function) {\r\n    return (...args) => {\r\n        return args.reduce((p, c) => {\r\n            for (let key in c) {\r\n                p[key] = fn(p[key] || 0, c[key]);\r\n            }\r\n            return p;\r\n        });\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"aad27b8cb4a333b81e81e0839cbbd1c8","cacheData":{"env":{}}}